name: ci
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Setup virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
      
      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Build Docker image
        run: |
          docker build -t celuma-backend .
      
      - name: Start services
        run: |
          docker-compose up -d
          # Wait for services to be ready
          sleep 30
          # Check if API is responding
          curl -f http://localhost:8000/api/v1/health || exit 1
      
      - name: Run tests against running service
        run: |
          source .venv/bin/activate
          cd tests && python run_all_tests.py
      
      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=app --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
      
      - name: Cleanup services
        if: always()
        run: |
          docker-compose down -v
          docker system prune -f

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.test.result == 'success'
    steps:
      - uses: actions/checkout@v4
      
      - uses: docker/setup-buildx-action@v3
      
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)
          docker build -t $IMAGE .
          docker push $IMAGE
        env:
          DOCKER_BUILDKIT: 1
